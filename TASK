Q1.Create a policy to access all objects in a specific bucket.
-create policy
-allow for actions list and read permssion.
-give bucket arn
-create policy and attach to user

Q2.Create a policy to access only 2 objects in a specific bucket.
--create policy
-allow for actions list and read permssion.
-give bucket arn also give objects arn.
-create policy and attach to user

Q3.Create a policy to deny the access of Specific bucket.
-create resource based policy for bucket in json deny for all actions 
  {
  "Id": "Policy1702550019834",
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Stmt1702550010493",
      "Action": "s3:*",
      "Effect": "Deny",
      "Resource": "arn:aws:s3:::dhanubuck2",
      "Principal": {
        "AWS": [
          "arn:aws:iam::689385686280:user/dhanu"
        ]
      }
    }
  ]
}
Why we create resource based policy?
-When we create policy allow access for s3 buckets but if we want to deny access of specific bucket 
 for specific user for that create resource based policy for bucket.

Another Way

Q4.Create policy to create the user only and can attach policy to them.



Q5.Create a policy to place the user in a group only.

Q.10Create a resource based policy and attach to S3_B16 Bucket & only sunny user can able to access that bucket.
-give s3 read permission to sunny user.
-and create resource based policy allow all action for s3_b16 bucket
-{
    "Version": "2012-10-17",
    "Id": "Policy1702550974810",
    "Statement": [
        {
            "Sid": "Stmt1702550972941",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::689385686280:user/dhanu"
            },
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::S3_B16"
        }
    ]
}







